:orphan:
# TSGetProblemType
Gets the type of problem to be solved. 
## Synopsis
```
#include "petscts.h"  
PetscErrorCode TSGetProblemType(TS ts, TSProblemType *type)
```
Not collective


## Input Parameter

- ***ts   -*** The `TS`



## Output Parameter

- ***type -*** One of `TS_LINEAR`, `TS_NONLINEAR` where these types refer to problems of the forms


```none
         M U_t = A U
         M(t) U_t = A(t) U
         F(t,U,U_t)
```





## See Also
 [](chapter_ts), `TSSetUp()`, `TSProblemType`, `TS`

## Level
beginner

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ts/interface/ts.c.html#TSGetProblemType">src/ts/interface/ts.c</A>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/ts/interface/ts.c)


[Index of all TS routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
