:orphan:
# TSTrajectoryGet
Updates the solution vector of a time stepper object by querying the `TSTrajectory` 
## Synopsis
```
#include "petscts.h"  
PetscErrorCode TSTrajectoryGet(TSTrajectory tj, TS ts, PetscInt stepnum, PetscReal *time)
```
Collective


## Input Parameters

- ***tj      -*** the trajectory object
- ***ts      -*** the time stepper object
- ***stepnum -*** the step number



## Output Parameter

- ***time    -*** the time associated with the step number





## Note
Usually one does not call this routine, it is called automatically during `TSSolve()`


## See Also
 [](chapter_ts), `TS`, `TSSolve()`, `TSTrajectorySetUp()`, `TSTrajectoryDestroy()`, `TSTrajectorySetType()`, `TSTrajectorySetVariableNames()`, `TSGetTrajectory()`, `TSTrajectorySet()`, `TSTrajectoryGetVecs()`, `TSGetSolution()`

## Level
developer

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ts/trajectory/interface/traj.c.html#TSTrajectoryGet">src/ts/trajectory/interface/traj.c</A>

## Implementations

<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ts/trajectory/impls/basic/trajbasic.c.html#TSTrajectoryGet_Basic">TSTrajectoryGet_Basic in src/ts/trajectory/impls/basic/trajbasic.c</A><BR>
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ts/trajectory/impls/memory/trajmemory.c.html#TSTrajectoryGet_Memory">TSTrajectoryGet_Memory in src/ts/trajectory/impls/memory/trajmemory.c</A><BR>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/ts/trajectory/interface/traj.c)


[Index of all TS routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
