:orphan:
# PetscGaussLobattoLegendreElementAdvectionCreate
computes the advection operator for a single 1d GLL element 
## Synopsis
```
#include "petscdt.h" 
PetscErrorCode PetscGaussLobattoLegendreElementAdvectionCreate(PetscInt n, PetscReal *nodes, PetscReal *weights, PetscReal ***AA)
```
Not Collective


## Input Parameters

- ***n -*** the number of GLL nodes
- ***nodes -*** the GLL nodes
- ***weights -*** the GLL weightss



## Output Parameter

- ***AA -*** the stiffness element





## Notes
Destroy this with `PetscGaussLobattoLegendreElementAdvectionDestroy()`

This is the same as the Gradient operator multiplied by the diagonal mass matrix

You can access entries in this array with AA[i][j] but in memory it is stored in contiguous memory, row oriented


## See Also
 `PetscDTGaussLobattoLegendreQuadrature()`, `PetscGaussLobattoLegendreElementLaplacianCreate()`, `PetscGaussLobattoLegendreElementAdvectionDestroy()`

## Level
beginner

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/dm/dt/interface/dt.c.html#PetscGaussLobattoLegendreElementAdvectionCreate">src/dm/dt/interface/dt.c</A>

## Examples
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/tao/unconstrained/tutorials/burgers_spectral.c.html">src/tao/unconstrained/tutorials/burgers_spectral.c</A><BR>
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/tao/unconstrained/tutorials/spectraladjointassimilation.c.html">src/tao/unconstrained/tutorials/spectraladjointassimilation.c</A><BR>
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ts/tutorials/ex50.c.html">src/ts/tutorials/ex50.c</A><BR>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/dm/dt/interface/dt.c)


[Index of all DT routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
