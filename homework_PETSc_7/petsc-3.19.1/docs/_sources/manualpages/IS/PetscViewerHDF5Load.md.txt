:orphan:
# PetscViewerHDF5Load
Read a raw array from the `PETSCVIEWERHDF5` dataset. 
## Synopsis
```
#include "petsclayoutdf5.h"   
#include "petscis.h"   
PetscErrorCode PetscViewerHDF5Load(PetscViewer viewer, const char *name, PetscLayout map, hid_t datatype, void **newarr)
```
Collective; No Fortran Support


## Input Parameters

- ***viewer   -*** The `PETSCVIEWERHDF5` viewer
- ***name     -*** The dataset name
- ***datatype -*** The HDF5 datatype of the items in the dataset



## Input/Output Parameter

- ***map      -*** The layout which specifies array partitioning, on output the
set up layout (with global size and blocksize according to dataset)



## Output Parameter

- ***newarr   -*** The partitioned array, a memory image of the given dataset





## Notes
This is intended mainly for internal use; users should use higher level routines such as `ISLoad()`, `VecLoad()`, `DMLoad()`.

The array is partitioned according to the given `PetscLayout` which is converted to an HDF5 hyperslab.

This name is relative to the current group returned by `PetscViewerHDF5OpenGroup()`.


## See Also
 `PetscViewer`, `PETSCVIEWERHDF5`, `PetscViewerHDF5Open()`, `PetscViewerHDF5PushGroup()`, `PetscViewerHDF5OpenGroup()`, `PetscViewerHDF5ReadSizes()`,
`VecLoad()`, `ISLoad()`

## Level
developer

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/is/utils/hdf5io.c.html#PetscViewerHDF5Load">src/vec/is/utils/hdf5io.c</A>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/vec/is/utils/hdf5io.c)


[Index of all IS routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
