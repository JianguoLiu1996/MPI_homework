:orphan:
# PCShellSetApplyTranspose
Sets routine to use as preconditioner transpose. 
## Synopsis
```
#include "petscpc.h" 
PetscErrorCode PCShellSetApplyTranspose(PC pc, PetscErrorCode (*applytranspose)(PC, Vec, Vec))
```
Logically Collective


## Input Parameters

- ***pc -*** the preconditioner context
- ***applytranspose -*** the application-provided preconditioning transpose routine



## Calling sequence of `applytranspose`
```none
   PetscErrorCode applytranspose(PC pc, Vec xin, Vec xout)
```


- ***pc -*** the preconditioner, get the application context with `PCShellGetContext()`
- ***xin -*** input vector
- ***xout -*** output vector





## Note
Uses the same context variable as `PCShellSetApply()`.


## See Also
 `PCSHELL`, `PCShellSetApplyRichardson()`, `PCShellSetSetUp()`, `PCShellSetApply()`, `PCSetContext()`, `PCShellSetApplyBA()`

## Level
intermediate

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ksp/pc/impls/shell/shellpc.c.html#PCShellSetApplyTranspose">src/ksp/pc/impls/shell/shellpc.c</A>

## Examples
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/tao/pde_constrained/tutorials/hyperbolic.c.html">src/tao/pde_constrained/tutorials/hyperbolic.c</A><BR>
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/tao/pde_constrained/tutorials/parabolic.c.html">src/tao/pde_constrained/tutorials/parabolic.c</A><BR>

## Implementations

<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/ksp/pc/impls/shell/shellpc.c.html#PCShellSetApplyTranspose_Shell(PC pc, PetscErrorCode (*applytranspose)">PCShellSetApplyTranspose_Shell(PC pc, PetscErrorCode (*applytranspose) in src/ksp/pc/impls/shell/shellpc.c</A><BR>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/ksp/pc/impls/shell/shellpc.c)


[Index of all PC routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
