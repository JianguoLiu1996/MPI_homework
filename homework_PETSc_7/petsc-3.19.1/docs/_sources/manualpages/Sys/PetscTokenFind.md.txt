:orphan:
# PetscTokenFind
Locates next "token" in a `PetscToken` 
## Synopsis
```
#include "petscsys.h"   
PetscErrorCode PetscTokenFind(PetscToken a, char *result[])
```
Not Collective; No Fortran Support


## Input Parameter

- ***a -*** pointer to token



## Output Parameter

- ***result -*** location of occurrence, `NULL` if not found





## Notes
Treats all characters etc. inside a double quote "
as a single token.

For example if the separator character is + and the string is xxxx+y then the first fine will return a pointer to a `NULL` terminated xxxx and the
second will return a `NULL` terminated y

If the separator character is + and the string is xxxx then the first and only token found will be a pointer to a `NULL` terminated xxxx


## See Also
 `PetscToken`, `PetscTokenCreate()`, `PetscTokenDestroy()`

## Level
intermediate

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/sys/utils/str.c.html#PetscTokenFind">src/sys/utils/str.c</A>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/sys/utils/str.c)


[Index of all Sys routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
