:orphan:
# PetscMPIAbortErrorHandler
Calls PETSCABORT and exits. 
## Synopsis
```
#include "petscsys.h" 
PetscErrorCode PetscMPIAbortErrorHandler(MPI_Comm comm, int line, const char *fun, const char *file, PetscErrorCode n, PetscErrorType p, const char *mess, void *ctx)
```
Not Collective


## Input Parameters

- ***comm -*** communicator over which error occurred
- ***line -*** the line number of the error (indicated by __LINE__)
- ***file -*** the file in which the error was detected (indicated by __FILE__)
- ***mess -*** an error text string, usually just printed to the screen
- ***n -*** the generic error number
- ***p -*** `PETSC_ERROR_INITIAL` if error just detected, otherwise `PETSC_ERROR_REPEAT`
- ***ctx -*** error handler context





## Note
Users do not directly call this routine

Use `PetscPushErrorHandler()` to set the desired error handler.  The
currently available PETSc error handlers include `PetscTraceBackErrorHandler()`,
`PetscMPIAbortErrorHandler()`, `PetscAttachDebuggerErrorHandler()`, and `PetscAbortErrorHandler()`.


## See Also
 `PetscError()`, `PetscPushErrorHandler()`, `PetscPopErrorHandler()`, `PetscAttachDebuggerErrorHandler()`,
`PetscAbortErrorHandler()`, `PetscMPIAbortErrorHandler()`, `PetscTraceBackErrorHandler()`, `PetscEmacsClientErrorHandler()`, `PetscReturnErrorHandler()`

## Level
developer

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/sys/error/errstop.c.html#PetscMPIAbortErrorHandler">src/sys/error/errstop.c</A>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/sys/error/errstop.c)


[Index of all Sys routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
