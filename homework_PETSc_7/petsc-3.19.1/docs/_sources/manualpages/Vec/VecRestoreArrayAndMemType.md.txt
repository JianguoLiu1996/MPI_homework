:orphan:
# VecRestoreArrayAndMemType
Restores a vector after `VecGetArrayAndMemType()` has been called. 
## Synopsis
```
#include "petscvec.h"   
PetscErrorCode VecRestoreArrayAndMemType(Vec x, PetscScalar **a)
```
Logically Collective; No Fortran Support


## Input Parameters

- ***x -*** the vector
- ***a -*** location of pointer to array obtained from `VecGetArrayAndMemType()`





## See Also
 [](chapter_vectors), `Vec`, `VecGetArrayAndMemType()`, `VecGetArray()`, `VecRestoreArrayRead()`, `VecRestoreArrays()`, `VecRestoreArrayF90()`, `VecRestoreArrayReadF90()`,
`VecPlaceArray()`, `VecRestoreArray2d()`, `VecGetArrayPair()`, `VecRestoreArrayPair()`

## Level
beginner

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/interface/rvector.c.html#VecRestoreArrayAndMemType">src/vec/vec/interface/rvector.c</A>

## Implementations

<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/impls/seq/kokkos/veckok.kokkos.cxx.html#VecRestoreArrayAndMemType_SeqKokkos">VecRestoreArrayAndMemType_SeqKokkos in src/vec/vec/impls/seq/kokkos/veckok.kokkos.cxx</A><BR>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/vec/vec/interface/rvector.c)


[Index of all Vec routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
