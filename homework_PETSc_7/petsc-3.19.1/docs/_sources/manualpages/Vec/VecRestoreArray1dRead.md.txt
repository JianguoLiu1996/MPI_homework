:orphan:
# VecRestoreArray1dRead
Restores a vector after `VecGetArray1dRead()` has been called. 
## Synopsis
```
#include "petscvec.h"   
PetscErrorCode VecRestoreArray1dRead(Vec x, PetscInt m, PetscInt mstart, PetscScalar *a[])
```
Logically Collective


## Input Parameters

- ***x -*** the vector
- ***m -*** first dimension of two dimensional array
- ***mstart -*** first index you will use in first coordinate direction (often 0)
- ***a -*** location of pointer to array obtained from `VecGetArray1dRead()`





## Notes
For regular PETSc vectors this routine does not involve any copies. For
any special vectors that do not store local vector data in a contiguous
array, this routine will copy the data back into the underlying
vector data structure from the array obtained with `VecGetArray1dRead()`.

This routine actually zeros out the a pointer.


## See Also
 [](chapter_vectors), `Vec`, `VecGetArray()`, `VecRestoreArray()`, `VecRestoreArrays()`, `VecRestoreArrayF90()`, `VecPlaceArray()`,
`VecGetArray2d()`, `VecGetArray3d()`, `VecRestoreArray3d()`, `DMDAVecGetArray()`, `DMDAVecRestoreArray()`
`VecGetArray1d()`, `VecRestoreArray2d()`, `VecGetArray4d()`, `VecRestoreArray4d()`

## Level
developer

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/interface/rvector.c.html#VecRestoreArray1dRead">src/vec/vec/interface/rvector.c</A>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/vec/vec/interface/rvector.c)


[Index of all Vec routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
