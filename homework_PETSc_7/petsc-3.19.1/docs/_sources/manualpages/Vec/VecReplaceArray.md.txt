:orphan:
# VecReplaceArray
Allows one to replace the array in a vector with an array provided by the user. This is useful to avoid copying an array into a vector. 
## Synopsis
```
#include "petscvec.h"   
PetscErrorCode VecReplaceArray(Vec vec, const PetscScalar array[])
```
Not Collective; No Fortran Support


## Input Parameters

- ***vec -*** the vector
- ***array -*** the array





## Notes
This permanently replaces the array and frees the memory associated
with the old array. Use `VecPlaceArray()` to temporarily replace the array.

The memory passed in MUST be obtained with `PetscMalloc()` and CANNOT be
freed by the user. It will be freed when the vector is destroyed.


## See Also
 [](chapter_vectors), `Vec`, `VecGetArray()`, `VecRestoreArray()`, `VecPlaceArray()`, `VecResetArray()`

## Level
developer

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/interface/rvector.c.html#VecReplaceArray">src/vec/vec/interface/rvector.c</A>

## Implementations

<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/impls/seq/dvec2.c.html#VecReplaceArray_Seq">VecReplaceArray_Seq in src/vec/vec/impls/seq/dvec2.c</A><BR>
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/impls/seq/kokkos/veckok.kokkos.cxx.html#VecReplaceArray_SeqKokkos">VecReplaceArray_SeqKokkos in src/vec/vec/impls/seq/kokkos/veckok.kokkos.cxx</A><BR>
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/impls/seq/seqviennacl/vecviennacl.cxx.html#VecReplaceArray_SeqViennaCL">VecReplaceArray_SeqViennaCL in src/vec/vec/impls/seq/seqviennacl/vecviennacl.cxx</A><BR>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/vec/vec/interface/rvector.c)


[Index of all Vec routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
