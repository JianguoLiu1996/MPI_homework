:orphan:
# VecCreateSeqViennaCLWithArrays
Creates a ViennaCL sequential vector, where the user provides the array space to store the vector values. 
## Synopsis
```
#include "petscvec.h" 
PetscErrorCode VecCreateSeqViennaCLWithArrays(MPI_Comm comm, PetscInt bs, PetscInt n, const PetscScalar cpuarray[], const ViennaCLVector *viennaclvec, Vec *V)
```
Collective


## Input Parameters

- ***comm -*** the communicator, should be PETSC_COMM_SELF
- ***bs -*** the block size
- ***n -*** the vector length
- ***cpuarray -*** CPU memory where the vector elements are to be stored.


- ***viennaclvec -*** ViennaCL vector where the Vec entries are to be stored on the device.



## Output Parameter

- ***V -*** the vector



## Notes
If both cpuarray and viennaclvec are provided, the caller must ensure that
the provided arrays have identical values.

PETSc does NOT free the provided arrays when the vector is destroyed via
VecDestroy(). The user should not free the array until the vector is
destroyed.




## See Also
 `VecCreateMPIViennaCLWithArrays()`, `VecCreate()`, `VecCreateSeqWithArray()`,
`VecViennaCLPlaceArray()`, `VecPlaceArray()`, `VecCreateSeqCUDAWithArrays()`,
`VecViennaCLAllocateCheckHost()`

## Level
intermediate

## Location
<A HREF="PETSC_DOC_OUT_ROOT_PLACEHOLDER/src/vec/vec/impls/seq/seqviennacl/vecviennacl.cxx.html#VecCreateSeqViennaCLWithArrays">src/vec/vec/impls/seq/seqviennacl/vecviennacl.cxx</A>


---
[Edit on GitLab](https://gitlab.com/petsc/petsc/-/edit/release/src/vec/vec/impls/seq/seqviennacl/vecviennacl.cxx)


[Index of all Vec routines](index.md)  
[Table of Contents for all manual pages](/manualpages/index.md)  
[Index of all manual pages](/manualpages/singleindex.md)  
